
--langdef=CoffeeScript
--langmap=CoffeeScript:.coffee
--regex-CoffeeScript=/^[ \t ]*(@?[a-zA-Z$_\.0-9]+)[ \t ]*(=|\:)[ \t ]*(\(.*\))?[ \t ]*(-|=)>/\1/f,function/
--regex-CoffeeScript=/^[ \t ]*([a-zA-Z$_0-9]+\:\:[a-zA-Z$_\.0-9]+)[ \t ]*(=|\:)[ \t ]*(\(.*\))?[ \t ]*(-|=)>/\1/f,function/
--regex-CoffeeScript=/^[ \t ]*describe[ \t ]"(.+)"[ \t ]*,[ \t ]+[-=]>/\1/f,function/
--regex-CoffeeScript=/^[ \t ]*describe[ \t ]'(.+)'[ \t ]*,[ \t ]+[-=]>/\1/f,function/
--regex-CoffeeScript=/^[ \t ]*it[ \t ]"([^"]+)"[ \t ]*,[ \t ]+[-=]>/\1/f,function/
--regex-CoffeeScript=/^[ \t ]*it[ \t ]'([^']+)'[ \t ]*,[ \t ]+[-=]>/\1/f,function/
--regex-CoffeeScript=/^[ \t ]*f+describe[ \t ]"(.+)"[ \t ]*,[ \t ]+[-=]>/focused\: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*f+describe[ \t ]'(.+)'[ \t ]*,[ \t ]+[-=]>/focused: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*f+it[ \t ]"([^"]+)"[ \t ]*,[ \t ]+[-=]>/focused: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*f+it[ \t ]'([^']+)'[ \t ]*,[ \t ]+[-=]>/focused: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*xdescribe[ \t ]"(.+)"[ \t ]*,[ \t ]+[-=]>/disabled\: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*xdescribe[ \t ]'(.+)'[ \t ]*,[ \t ]+[-=]>/disabled: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*xit[ \t ]"([^"]+)"[ \t ]*,[ \t ]+[-=]>/disabled: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*xit[ \t ]'([^']+)'[ \t ]*,[ \t ]+[-=]>/disabled: \1/f,function/
--regex-CoffeeScript=/^[ \t ]*class[ \t ]*([a-zA-Z$_\.0-9]+)[ \t ]*/\1/f,function/

--langdef=Css
--langmap=Css:.css
--langmap=Css:+.less
--langmap=Css:+.scss
--regex-Css=/^[ \t ]*(.+)[ \t ]*\{/\1/f,function/
--regex-Css=/^[ \t ]*(.+)[ \t ]*,[ \t ]*$/\1/f,function/
--regex-Css=/^[ \t ]*[@$]([a-zA-Z$_][-a-zA-Z$_0-9]*)[ \t ]*:/\1/f,function/

--langdef=Sass
--langmap=Sass:.sass
--regex-Sass=/^[ \t ]*([#.]*[a-zA-Z_0-9]+)[ \t ]*$/\1/f,function/

--langdef=Yaml
--langmap=Yaml:.yaml
--langmap=Yaml:+.yml
--regex-Yaml=/^[ \t ]*([a-zA-Z_0-9 ]+)[ \t ]*\:[ \t ]*/\1/f,function/

--regex-Html=/^[ \t ]*<([a-zA-Z]+)[ \t ]*.*>/\1/f,function/

--langdef=Json
--langmap=Json:.json
--regex-Json=/^[ \t ]*"([^"]+)"[ \t ]*\:/\1/f,function/

--langdef=Cson
--langmap=Cson:.cson
--langmap=Cson:+.gyp
--regex-Cson=/^[ \t ]*'([^']+)'[ \t ]*\:/\1/f,function/
--regex-Cson=/^[ \t ]*"([^"]+)"[ \t ]*\:/\1/f,function/
--regex-Cson=/^[ \t ]*([^'"]+)[ \t ]*\:/\1/f,function/


--langmap=C++:+.mm

--langmap=Ruby:+(Rakefile)

--langdef=Rust
--langmap=Rust:.rs
--regex-Rust=/^[ \t ]*(#\[[^\]]\][ \t ]*)*(pub[ \t ]+)?(extern[ \t ]+)?("[^"]+"[ \t ]+)?(unsafe[ \t ]+)?fn[ \t ]+([a-zA-Z0-9_]+)/\6/f,functions,function definitions/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?type[ \t ]+([a-zA-Z0-9_]+)/\2/T,types,type definitions/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?enum[ \t ]+([a-zA-Z0-9_]+)/\2/g,enum,enumeration names/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?struct[ \t ]+([a-zA-Z0-9_]+)/\2/s,structure names/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?mod[ \t ]+([a-zA-Z0-9_]+)/\2/m,modules,module names/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?(static|const)[ \t ]+(mut[ \t ]+)?([a-zA-Z0-9_]+)/\4/c,consts,static constants/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?(unsafe[ \t ]+)?trait[ \t ]+([a-zA-Z0-9_]+)/\3/t,traits,traits/
--regex-Rust=/^[ \t ]*(pub[ \t ]+)?(unsafe[ \t ]+)?impl([ \t\n ]*<[^>]*>)?[ \t ]+(([a-zA-Z0-9_:]+)[ \t ]*(<[^>]*>)?[ \t ]+(for)[ \t ]+)?([a-zA-Z0-9_]+)/\5 \7 \8/i,impls,trait implementations/
--regex-Rust=/^[ \t ]*macro_rules![ \t ]+([a-zA-Z0-9_]+)/\1/d,macros,macro definitions/

--langdef=scala
--langmap=scala:.scala

--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private[^ ]*|protected)?[ \t ]*class[ \t ]+([a-zA-Z0-9_]+)/\4/c,classes/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private[^ ]*|protected)?[ \t ]*object[ \t ]+([a-zA-Z0-9_]+)/\4/o,objects/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private[^ ]*|protected)?[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t  ]*)*case class[ \t  ]+([a-zA-Z0-9_]+)/\6/C,case classes/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private[^ ]*|protected)?[ \t ]*case object[ \t ]+([a-zA-Z0-9_]+)/\4/O,case objects/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private[^ ]*|protected)?[ \t ]*trait[ \t ]+([a-zA-Z0-9_]+)/\4/t,traits/
--regex-scala=/^[ \t ]*type[ \t ]+([a-zA-Z0-9_]+)/\1/T,types/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*(\[[a-z]*\])*|protected)[ \t ]*)*def[ \t ]+([a-zA-Z0-9_]+)/\4/m,methods/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ \t ]*)*val[ \t ]+([a-zA-Z0-9_]+)/\3/V,values/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ \t ]*)*var[ \t ]+([a-zA-Z0-9_]+)/\3/v,variables/
--regex-scala=/^[ \t ]*package[ \t ]+([a-zA-Z0-9_.]+)/\1/p<Plug>PeepOpenackages/
])])])])])'])"'"])'])"'"])'])"
